#!/usr/bin/env bash

usage() {
  printf -v text "%s" \
      "Shorthand script to start the ansible provisioning playbook with different tags.\n" \
      "By default it will run the full provisioning suite.\n\n" \
      "dev-provision [LIMITATION] [OPTIONS]\n" \
      "   -h, --help         shows this help message\n" \
      "   -i, --inventory    path to an inventory file\n\n" \
      "   LIMITATIONs:\n" \
      "     dotfiles         only provision dotfiles\n" \
      "     packages         only provision system packages\n" \
      "     tooling          only provision tooling\n\n" \
      "   example usage:\n" \
      "     ./dev-provision -i provisioning/inventory_custom_example.yml\n"

  printf "$text"
}

setup() {
  echo ">> Checking if required setup is already done..."
  if [ ! -x "$(command -v ansible)" ]; then
    # Setup minimal requirements for provisioning
    echo ">> Installing latest version of ansible"
    sudo apt update
    sudo apt install --yes software-properties-common
    sudo apt-add-repository --yes --update ppa:ansible/ansible
    sudo apt install --yes ansible
    echo ">> Done."
  fi

  if [ ! -d "provisioning/roles" ]; then
    echo ">> Install Ansible Roles using ansible-galaxy"
    ansible-galaxy install -p ./provisioning/roles -r ./provisioning/requirements.yml
    echo ">> Done."
  fi
  echo ">> Finished."
}

provision() {
    local tags=$1

    tags=${tags:-all}
    local message=${tags:-full system}
    setup
    echo ">> Starting $message provisioning ..."
    ansible-playbook \
        --connection=local \
        -i localhost, \
        -i ./provisioning/inventory.yml \
        $inventory \
        -K --tags "$tags" provisioning/playbook.yml
    echo ">> Finished."
}

OPTS=`getopt -o hi: --long inventory:,help -- "$@"`
if [ $? != 0 ] ; then echo "Failed parsing options." >&2 ; exit 1 ; fi

eval set -- "$OPTS"

while true; do
    case "$1" in
        -i | --inventory )
            inventory="-i $2"
            shift 2 ;;
        -h | --help )
            usage
            exit
            shift ;;
        -- )
            shift
            break ;;
        * )
            break ;;
    esac
done

case "$1" in
    dotfiles )
        provision dotfiles
        ;;
    tooling )
        provision tooling
        ;;
    packages )
        provision packages
        ;;
    * )
        provision
        ;;
esac
